
这是一个简单的C语言项目


vscode 【打开项目】
===========================================================================================
"文件"菜单下有个菜单项叫做 "打开文件夹"，点击即可打开指定的项目源码。
vscode内置有终端，即命令行、控制台。



在命令行下【编译】此项目，可以使用以下三条指令：
===========================================================================================

首先，安装gcc gdb make(可以通过软件管家安装gcc三件套)

make debug		# 编译debug版本, 编译出来的可执行文件内带有调试信息，
				#比如函数名称、变量名等各种符号，以及编译器插入的跟调试有关的代码

make			# 按照makefile语法规则, 执行make时不指定编译目标, 
				# 则自动选中./Makefile中第一个编译目标, 在此项目中即debug目标

make release	# 编译发行版本，不带有调试信息，体积也较小
				# 注意：编译出来的可执行文件中还保留有一部分函数名称，可以通过strip去除



在vscode中【调试】项目的可执行文件
===========================================================================================

调试，指使用相应的调试程序加载并运行 【调试版的可执行文件】的动作，
带有调试信息和调试代码的可执行文件，可以被受控制的运行，
可以由调试器暂停、继续、单行运行，
当程序出错无法继续运行时，也能显示更多的错误信息供开发人员参考，
便于开发人员发现源码中出错的地方，并对源码进行修正。

启动调试程序的步骤很简单：
1). 编译调试版本
2). 在vscode中打开此项目的任意一个c文件，然后按F5即可开始调试









调试过程中的常用操作：
===========================================================================================
1). 设置断点	在vscode编辑器中，每个C文件的每一行都有行号，把鼠标移动到行号上，前边会显示一个红点
				用鼠标左键点亮这个红点，就下断成功了，调试版程序运行到这一行就会暂停
				如果程序运行逻辑不对，那么此时就可以通过查看变量的值，来判断运行逻辑在这一步时是否正确
2). 运行下一行代码，即单步执行
3). 运行到函数返回处
4). 运行到函数内部的代码
5). 继续运行，直到程序退出，或碰到下一个断点




make构建系统
===========================================================================================
使用一个或多个makefile文件来 【描述项目】
包括项目的各个编译目标、各个编译目标的应该编译哪些源文件、
定义哪些宏、头文件的搜索路径、链接哪些动态、静态库、
以及哪类源文件使用哪个编译器、编译参数。。。
